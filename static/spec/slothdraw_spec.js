// Generated by CoffeeScript 1.4.0
(function() {

  describe("SlothDraw", function() {
    beforeEach(function() {
      return this.sd = new SlothDrawin();
    });
    it("should give me a sloth", function() {
      return expect(this.sd.slothMe()).toEqual('sloth');
    });
    it("should interpolate my numbers", function() {
      expect(this.sd.interpolateNumbers(0, 4, 5)).toEqual([0, 1, 2, 3, 4]);
      expect(this.sd.interpolateNumbers(1, 5, 5)).toEqual([1, 2, 3, 4, 5]);
      expect(this.sd.interpolateNumbers(1, 9, 5)).toEqual([1, 3, 5, 7, 9]);
      expect(this.sd.interpolateNumbers(0, 1, 2)).toEqual([0, 1]);
      expect(this.sd.interpolateNumbers(1, 1, 2)).toEqual([1, 1]);
      expect(this.sd.interpolateNumbers(1, 1, 1)).toEqual([1]);
      expect(this.sd.interpolateNumbers(1, 3, 1)).toEqual([2]);
      return expect(this.sd.interpolateNumbers(1, 9, 0)).toEqual([]);
    });
    it("should interpolate my points", function() {
      var expected, interpolated;
      interpolated = this.sd.interpolatePoints(0, 0, 0, 4, 5);
      expected = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4]];
      expect(interpolated).toEqual(expected);
      interpolated = this.sd.interpolatePoints(0, 0, 2, 2, 1);
      expected = [[1, 1]];
      expect(interpolated).toEqual(expected);
      interpolated = this.sd.interpolatePoints(0, 0, 1, 1, 2);
      expected = [[0, 0], [1, 1]];
      expect(interpolated).toEqual(expected);
      interpolated = this.sd.interpolatePoints(0, 0, 1, 1, 0);
      expected = [];
      return expect(interpolated).toEqual(expected);
    });
    return it("should tell me the distance between two points", function() {
      expect(this.sd.distanceBetweenTwoPoints(0, 0, 10, 0)).toEqual(10);
      expect(this.sd.distanceBetweenTwoPoints(10, 0, 0, 0)).toEqual(10);
      expect(this.sd.distanceBetweenTwoPoints(0, 0, 0, 10)).toEqual(10);
      expect(this.sd.distanceBetweenTwoPoints(0, 10, 0, 0)).toEqual(10);
      expect(this.sd.distanceBetweenTwoPoints(0, 0, -10, 0)).toEqual(10);
      return expect(Math.round(this.sd.distanceBetweenTwoPoints(3, 2, 5, -1))).toEqual(4);
    });
  });

}).call(this);
